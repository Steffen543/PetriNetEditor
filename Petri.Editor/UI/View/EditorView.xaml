<UserControl x:Class="Petri.Editor.UI.View.EditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:components="clr-namespace:Petri.Logic.Components;assembly=Petri.Logic"
             xmlns:converters="clr-namespace:Petri.Editor.Converter"
             d:DataContext="{d:DesignInstance viewModel:EditorViewModel}"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
               xmlns:converter="clr-namespace:Petri.Editor.Converter"
              xmlns:viewModel="clr-namespace:Petri.Editor.UI.ViewModel"
             xmlns:converterConnection="clr-namespace:Petri.Editor.Converter.Conn"
             xmlns:media2d="clr-namespace:Petzold.Media2D"
             xmlns:controls="clr-namespace:Petri.Editor.Controls"
             mc:Ignorable="d"  x:Name="self"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:IsNullConverter x:Key="IsNullConverter"/>
        <converter:PetriNetCoordinatesConverter x:Key="PetriNetCoordinatesConverter"/>
        <converter:EqualsConverter x:Key="EqualsConverter"/>
        <converter:IncreaseNumberConverter x:Key="IncreaseNumberConverter"/>
        <converter:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        <converter:ConnectionColorConverter x:Key="ConnectionColorConverter" />
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type viewModel:EditorMode}"  x:Key="MyEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="viewModel:EditorMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <converterConnection:ConnectionSourceXPointConverter x:Key="ConnectionSourceXPointConverter" />
        <converterConnection:ConnectionDestinationXPointConverter x:Key="ConnectionDestinationXPointConverter" />
        <converterConnection:ConnectionSourceYPointConverter x:Key="ConnectionSourceYPointConverter" />
        <converterConnection:ConnectionDestinationYPointConverter x:Key="ConnectionDestinationYPointConverter" />
        <converterConnection:HalfValueConverter x:Key="HalfValueConverter" />
        <Style TargetType="Border" x:Key="Border_UI_Placeable">

        </Style>
        <Style TargetType="Border" x:Key="Border_Stelle" BasedOn="{StaticResource Border_UI_Placeable}">
            <Setter Property="CornerRadius" Value="50" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Width" Value="{DynamicResource StelleSize}" />
            <Setter Property="Height" Value="{DynamicResource StelleSize}" />
        </Style>
        <Style TargetType="Border" x:Key="Border_Transition" BasedOn="{StaticResource Border_UI_Placeable}">
            <Setter Property="Background" Value="Blue" />
            <Setter Property="Width" Value="{DynamicResource TransitionSize}" />
            <Setter Property="Height" Value="{DynamicResource TransitionSize}" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ScrollViewer HorizontalScrollBarVisibility="Visible" Grid.Row="1"  VerticalScrollBarVisibility="Auto" x:Name="MainScrollViewer">
            <ItemsControl Width="8000" Height="8000" Grid.Row="1" x:Name="MainItemsControl"  Background="#A0A0A0" ItemsSource="{Binding Path=PetriNet.Objects}">
                <ItemsControl.LayoutTransform>
                    <ScaleTransform x:Name="ScaleTransform" />
                </ItemsControl.LayoutTransform>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding DataContext.AddCommand, ElementName=self}" CommandParameter="{Binding ElementName=MainItemsControl, Converter={StaticResource PetriNetCoordinatesConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas  x:Name="MainCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type components:Connection}">
                        <DataTemplate.Resources>
                            <system:Int32 x:Key="StartPosition">0</system:Int32>
                            <Point x:Key="StartPoint" X="0" Y="0" />
                        </DataTemplate.Resources>
                        <Border>
                            <Canvas Background="Red">
                                <media2d:ArrowLine x:Name="Arrow" IsArrowClosed="True"  
                                    StrokeThickness="2" ArrowLength="17" 
                                    X1="{Binding ., Converter={StaticResource ConnectionSourceXPointConverter}}"
                                    Y1="{Binding ., Converter={StaticResource ConnectionSourceYPointConverter}}"
                                    X2="{Binding ., Converter={StaticResource ConnectionDestinationXPointConverter}}"
                                    Y2="{Binding ., Converter={StaticResource ConnectionDestinationYPointConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.DeleteCommand, ElementName=self}" CommandParameter="{Binding .}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <media2d:ArrowLine.Style>
                                        <Style TargetType="{x:Type media2d:ArrowLine}">
                                            <Setter Property="Stroke" Value="#212121" />
                                            <Setter Property="Fill" Value="#212121" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                        <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Delete" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Stroke" Value="Red" />
                                                        <Setter Property="Fill" Value="Red" />
                                                        <Setter Property="Cursor" Value="Hand" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Execute" />
                                                        <Condition Binding="{Binding IsExecutable, UpdateSourceTrigger=PropertyChanged}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Stroke" Value="Green" />
                                                        <Setter Property="Fill" Value="Green" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </media2d:ArrowLine.Style>
                                </media2d:ArrowLine>
                                <Border  Canvas.Top="{Binding ElementName=Arrow, Path=MiddlePoint.Y}" 
                                   Canvas.Left="{Binding ElementName=Arrow,  Path=MiddlePoint.X}">
                                    <controls:EditConnectionValueControl DataContext="{Binding .}" />
                                </Border>
                            </Canvas>
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type components:Transition}">
                        <Grid >
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=BorderMain}" />
                            </Grid.OpacityMask>
                            <Border Style="{StaticResource Border_Transition}" x:Name="BorderMain" />
                            <Button x:Name="MainButton">
                                <Button.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource TransitionButtonStyle}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Execute"/>
                                                    <Condition Binding="{Binding IsExecutable, UpdateSourceTrigger=PropertyChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="BorderBrush" Value="Green" />
                                                    <Setter Property="BorderThickness" Value="3" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Command" Value="{Binding Path=DataContext.ExecuteCommand, ElementName=self}" />
                                                    <Setter Property="CommandParameter" Value="{Binding .}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsExecutable, UpdateSourceTrigger=PropertyChanged}" Value="false" />
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Execute" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                    <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                                                    <Setter Property="BorderThickness" Value="3" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddTransition">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddStelle">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection">
                                                <Setter Property="Command" Value="{Binding Path=DataContext.AddConnectionCommand, ElementName=self}" />
                                                <Setter Property="CommandParameter" Value="{Binding .}" />
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="ShowInformation">
                                                <Setter Property="Command" Value="{Binding Path=DataContext.ShowInformationCommand, ElementName=self}" />
                                                <Setter Property="CommandParameter" Value="{Binding .}" />
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Delete" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Command" Value="{Binding Path=DataContext.DeleteCommand, ElementName=self}" />
                                                    <Setter Property="CommandParameter" Value="{Binding .}" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="FontSize"  Value="16" />
                                                    <Setter Property="Foreground" Value="Red" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="ShowInformation">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>



                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Grid>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="{DynamicResource TransitionSize}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Text" Value="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                            <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Delete" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Text" Value="Löschen" />

                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                            <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection" />
                                                            <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Source, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Text" Value="Start" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                            <Setter Property="FontSize" Value="20" />
                                                            <Setter Property="Foreground" Value="Green" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                            <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection" />
                                                            <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Source, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="false" />
                                                            <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Destination, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Text" Value="Ziel" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                            <Setter Property="FontSize" Value="20" />
                                                            <Setter Property="Foreground" Value="Green" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate  DataType="{x:Type components:Stelle}">
                        <Grid>
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=BorderMain}" />
                            </Grid.OpacityMask>
                            <Border Style="{StaticResource Border_Stelle}" x:Name="BorderMain" />
                            <Button x:Name="MainButton" BorderThickness="0">
                                <Button.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource TransitionButtonStyle}">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <ItemsControl ItemsSource="{Binding Points}" Width="30" Height="30">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <UniformGrid HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.Resources>
                                                        <DataTemplate DataType="{x:Type components:StelleEmptyPoint}">
                                                            <Grid Margin="1">
                                                                <Ellipse  Fill="Transparent" Stroke="Black" StrokeThickness="1" />
                                                            </Grid>
                                                        </DataTemplate>
                                                        <DataTemplate DataType="{x:Type components:StelleFullPoint}">
                                                            <Grid Margin="1">
                                                                <Ellipse  Fill="Black" Stroke="Black" StrokeThickness="1" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.Resources>
                                                </ItemsControl>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Execute">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddTransition">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddStelle">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection">
                                                <Setter Property="Command" Value="{Binding Path=DataContext.AddConnectionCommand, ElementName=self}" />
                                                <Setter Property="CommandParameter" Value="{Binding .}" />
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="ShowInformation">
                                                <Setter Property="Command" Value="{Binding Path=DataContext.ShowInformationCommand, ElementName=self}" />
                                                <Setter Property="CommandParameter" Value="{Binding .}" />
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Delete">
                                                <Setter Property="Command" Value="{Binding Path=DataContext.DeleteCommand, ElementName=self}" />
                                                <Setter Property="CommandParameter" Value="{Binding .}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="Delete" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Content" Value="Löschen" />
                                                    <Setter Property="Foreground" Value="Red" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="FontSize" Value="16" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection" />
                                                    <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Source, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Content" Value="Start" />
                                                    <Setter Property="Foreground" Value="Green" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="FontSize" Value="20" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=MainButton}" Value="true" />
                                                    <Condition Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="AddConnection" />
                                                    <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Source, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="false" />
                                                    <Condition Binding="{Binding Path=DataContext.AddConnectionHelper.Destination, ElementName=self, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullConverter}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Content" Value="Ziel" />
                                                    <Setter Property="Foreground" Value="Green" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="FontSize" Value="20" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>


                                            <DataTrigger Binding="{Binding Path=DataContext.EditorMode, ElementName=self, UpdateSourceTrigger=PropertyChanged}" Value="ShowInformation">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </DataTrigger>



                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>

                            </Button>

                        </Grid>
                    </DataTemplate>
                </ItemsControl.Resources>
            </ItemsControl>

        </ScrollViewer>

        <Grid Background="#999999"  Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch"  >
                <Label Content="Zoom: " VerticalAlignment="Center"
                       Target="{Binding ElementName=ZoomSlider}" />
                <Slider x:Name="ZoomSlider" Width="200" 
                        Minimum="0.25" VerticalAlignment="Center"
                        Value="1"
                        Maximum="1.5"
                        SmallChange="0.5"
                        LargeChange="1.0" />


            </StackPanel>
        </Grid>


    </Grid>
</UserControl>
